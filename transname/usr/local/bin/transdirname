#!/bin/bash

# Fun√ß√£o: Mostrar ajuda
mostrar_ajuda() {
    echo "$0 - Traduz nomes de diret√≥rios para outro idioma usando translate-shell"
    echo
    echo "Uso: $0 [op√ß√µes] dir1 [dir2 ...]"
    echo ""
    echo "Op√ß√µes:"
    echo "  -t <idioma>         Especifica o idioma de destino (ex: en, es, fr)"
    echo "  --list-languages    Lista os idiomas suportados pelo translate-shell"
    echo "  --help              Mostra esta ajuda"
    echo ""
    echo "Se nenhum idioma for especificado, o script usar√° o idioma do sistema."
    echo "Exemplos:"
    echo "  $0 pasta1 pasta_de_testes"
    echo "  $0 -t es documentos pessoais"
    echo "  $0 --list-languages"
    exit 0
}

# Fun√ß√£o: Detectar idioma do sistema
detectar_idioma_sistema() {
    echo "$LANG" | cut -d'.' -f1 | cut -d'_' -f1
}

# Fun√ß√£o: Verificar depend√™ncias
verificar_dependencias() {
    if ! command -v trans &> /dev/null; then
        echo "translate-shell n√£o est√° instalado. Instale com:"
        echo "  sudo apt install translate-shell"
        exit 1
    fi
}

# Fun√ß√£o: Processar argumentos
processar_argumentos() {
    while [[ "$1" == -* ]]; do
        case "$1" in
            -t)
                shift
                IDIOMA_DESTINO="$1"
                shift
                ;;
            --list-languages)
                echo "üåç Idiomas suportados pelo translate-shell:"
                trans -R
                exit 0
                ;;
            --help)
                mostrar_ajuda
                ;;
            *)
                echo "‚ùå Op√ß√£o inv√°lida: $1"
                mostrar_ajuda
                ;;
        esac
    done
    DIRETORIOS=("$@")
}

# Fun√ß√£o: Traduzir e renomear diret√≥rio
traduzir_diretorio() {
    local DIR="$1"

    if [ ! -d "$DIR" ]; then
        echo "‚ö†Ô∏è Diret√≥rio n√£o encontrado: $DIR"
        return
    fi

    local BASENAME=$(basename "$DIR")
    local DIRNAME=$(dirname "$DIR")
    local SEPARADOR

    if [[ "$BASENAME" == *"_"* ]]; then
        SEPARADOR="_"
    elif [[ "$BASENAME" == *"-"* ]]; then
        SEPARADOR="-"
    elif [[ "$BASENAME" == *"."* ]]; then
        SEPARADOR="."
    else
        SEPARADOR=" "
    fi

    IFS="$SEPARADOR" read -ra PALAVRAS <<< "$BASENAME"
    PALAVRAS_TRADUZIDAS=()

    for PALAVRA in "${PALAVRAS[@]}"; do
        TRADUZIDA=$(trans -b ":$IDIOMA_DESTINO" "$PALAVRA" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/_/g')
        PALAVRAS_TRADUZIDAS+=("$TRADUZIDA")
    done

    local TRADUZIDO_LIMPO
    TRADUZIDO_LIMPO=$(IFS="$SEPARADOR"; echo "${PALAVRAS_TRADUZIDAS[*]}")
    local NOVO_NOME="${TRADUZIDO_LIMPO}"

    mv "$DIR" "$DIRNAME/$NOVO_NOME"
    echo "üìÅ Renomeado: $BASENAME ‚Üí $NOVO_NOME"
}

# Fun√ß√£o principal
main() {
    IDIOMA_DESTINO=$(detectar_idioma_sistema)

    processar_argumentos "$@"
    verificar_dependencias

    if [ "${#DIRETORIOS[@]}" -eq 0 ]; then
        echo "‚ö†Ô∏è Nenhum diret√≥rio especificado."
        mostrar_ajuda
    fi

    for DIR in "${DIRETORIOS[@]}"; do
        traduzir_diretorio "$DIR"
    done
}

# Execu√ß√£o
main "$@"
